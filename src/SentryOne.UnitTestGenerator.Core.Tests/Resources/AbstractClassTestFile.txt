using System.IO;
using System.Windows;

namespace TestNamespace {


	public abstract class TestClass
	{
		protected TestClass(int intProperty, string value, Stream targetStream)
		{

		}
 
		public abstract int SomeMethod();

		public abstract void SomeVoidMethod();

		protected abstract void SomeProtectedAbstractMethod();

		public int IntProperty { get; set; }

		protected int IntGetOnlyProperty { get; private set; }

		protected string Value { get; set; }

		protected string Value2 { get; private set; }

		protected string Value3 { private get; set; }

		protected abstract string AbstractValue { get; set; }

		protected abstract string AbstractValue2 { get; }

		protected abstract string AbstractValue3 { set; }

		protected Stream TargetStream { get; }

		protected string SomeMethod(int @int, int j) { return string.Empty; }

		protected abstract string SomeAbstractMethod(int i, int j);

		public abstract string SomePublicAbstractMethod(int p, int r);

		protected void SomeMethodVoid(int s, int t) {  }

		protected internal void SomeMethodVoid2(int s, int t) {  }

		protected internal abstract void SomeMethodVoid3(int s, int t);

		private protected abstract void SomeMethodVoid4(int s, int t);
	}
}