name: Extension build

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:
  
jobs:
  build:
    runs-on: windows-latest
    env: 
        Configuration: Release
        SolutionPath: src\Unitverse.sln
        VsixPath: src\Unitverse\bin\Release\Unitverse.vsix
        VsixManifestPath: src\Unitverse\source.extension.vsixmanifest
        VsixPublishManifestPath: src\Unitverse\publishManifest.json
    steps:
    - uses: actions/checkout@v2   
      with:
        fetch-depth: '0'
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - run: |
        ./.github/workflows/AutoVersion.ps1
      shell: pwsh 
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Restore NuGet Packages
      run: nuget restore $env:SolutionPath -Verbosity quiet
    - name: Set version for Visual Studio Extension
      uses: cezarypiatek/VsixVersionAction@1.0
      with:
        version: '${{env.AutoVersion_AssemblySemVer}}'
        vsix-manifest-file: 'src\Unitverse\source.extension.vsixmanifest'
    - name: Build extension
      run: msbuild $env:SolutionPath /t:Rebuild -v:m 
      env: 
        DeployExtension: False
    - name: Test extension
      run: dotnet test --no-build --verbosity minimal $env:SolutionPath
    - name: Collect artifacts - VSIX
      uses: actions/upload-artifact@v2
      with:
        name: Unitverse-VSIX
        path: ${{ env.VsixPath }}
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{env.AutoVersion_SemVer}}
        release_name: ${{env.AutoVersion_SemVer}}
        body: 'Unitverse v${{env.AutoVersion_SemVer}}'
        draft: false
        prerelease: false
    - name: Upload VSIX to Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.VsixPath }}
        asset_name: Unitverse.vsix
        asset_content_type: binary/octet-stream
#    - name: Publish extension to Marketplace
#      uses: cezarypiatek/VsixPublisherAction@0.1
#      with:
#        extension-file: ${{ env.VsixPath }}
#        publish-manifest-file: ${{ env.VsixPublishManifestPath }}
#        personal-access-code: ${{ secrets.VS_PUBLISHER_ACCESS_TOKEN }}      
